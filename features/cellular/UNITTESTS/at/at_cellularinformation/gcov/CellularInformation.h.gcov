        -:    0:Source:../../../framework/API/CellularInformation.h
        -:    0:Graph:objs/AT_CellularInformation_unit/AT_CellularInformation.gcno
        -:    0:Data:objs/AT_CellularInformation_unit/AT_CellularInformation.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:/*
        -:    2: * Copyright (c) 2018, Arm Limited and affiliates.
        -:    3: * SPDX-License-Identifier: Apache-2.0
        -:    4: *
        -:    5: * Licensed under the Apache License, Version 2.0 (the "License");
        -:    6: * you may not use this file except in compliance with the License.
        -:    7: * You may obtain a copy of the License at
        -:    8: *
        -:    9: *     http://www.apache.org/licenses/LICENSE-2.0
        -:   10: *
        -:   11: * Unless required by applicable law or agreed to in writing, software
        -:   12: * distributed under the License is distributed on an "AS IS" BASIS,
        -:   13: * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        -:   14: * See the License for the specific language governing permissions and
        -:   15: * limitations under the License.
        -:   16: */
        -:   17:
        -:   18:#ifndef CELLULAR_INFORMATION_H_
        -:   19:#define CELLULAR_INFORMATION_H_
        -:   20:
        -:   21:#include <stddef.h>
        -:   22:#include "nsapi_types.h"
        -:   23:
        -:   24:namespace mbed {
        -:   25:
        -:   26:/**
        -:   27: *  Class CellularInformation
        -:   28: *
        -:   29: *  An abstract interface that provides information about cellular device.
        -:   30: */
        3:   31:class CellularInformation
        -:   32:{
        -:   33:protected:
        -:   34:    // friend of CellularDevice so that it's the only way to close/delete this class.
        -:   35:    friend class CellularDevice;
        -:   36:
        -:   37:    /** virtual Destructor
        -:   38:     */
        3:   39:    virtual ~CellularInformation() {};
        -:   40:
        -:   41:public:
        -:   42:    /** Request manufacturer identification of cellular device
        -:   43:     *
        -:   44:     *  @param buf      manufacturer identification
        -:   45:     *  @param buf_size max length of manufacturer identification is 2048 characters
        -:   46:     *  @return         on success read character count, on failure negative error code
        -:   47:     */
        -:   48:    virtual nsapi_size_or_error_t get_manufacturer(char *buf, size_t buf_size) = 0;
        -:   49:
        -:   50:    /** Request model identification of cellular device
        -:   51:     *
        -:   52:     *  @param buf      model identification
        -:   53:     *  @param buf_size max length of model identification is 2048 characters
        -:   54:     *  @return         on success read character count, on failure negative error code
        -:   55:     */
        -:   56:    virtual nsapi_size_or_error_t get_model(char *buf, size_t buf_size) = 0;
        -:   57:
        -:   58:    /** Request revision identification of cellular device
        -:   59:     *
        -:   60:     *  @param buf      revision identification
        -:   61:     *  @param buf_size max length of revision identification is 2048 characters
        -:   62:     *  @return         on success read character count, on failure negative error code
        -:   63:     */
        -:   64:    virtual nsapi_size_or_error_t get_revision(char *buf, size_t buf_size) = 0;
        -:   65:};
        -:   66:
        -:   67:} // namespace mbed
        -:   68:
        -:   69:#endif // CELLULAR_INFORMATION_H_

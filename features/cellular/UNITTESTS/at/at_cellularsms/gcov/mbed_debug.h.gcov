        -:    0:Source:../../../../../platform/mbed_debug.h
        -:    0:Graph:objs/AT_CellularSMS_unit/AT_CellularSMS.gcno
        -:    0:Data:objs/AT_CellularSMS_unit/AT_CellularSMS.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:
        -:    2:/** \addtogroup platform */
        -:    3:/** @{*/
        -:    4:/**
        -:    5: * \defgroup platform_debug Debug functions
        -:    6: * @{
        -:    7: */
        -:    8: 
        -:    9:/* mbed Microcontroller Library
        -:   10: * Copyright (c) 2006-2013 ARM Limited
        -:   11: *
        -:   12: * Licensed under the Apache License, Version 2.0 (the "License");
        -:   13: * you may not use this file except in compliance with the License.
        -:   14: * You may obtain a copy of the License at
        -:   15: *
        -:   16: *     http://www.apache.org/licenses/LICENSE-2.0
        -:   17: *
        -:   18: * Unless required by applicable law or agreed to in writing, software
        -:   19: * distributed under the License is distributed on an "AS IS" BASIS,
        -:   20: * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        -:   21: * See the License for the specific language governing permissions and
        -:   22: * limitations under the License.
        -:   23: */
        -:   24:#ifndef MBED_DEBUG_H
        -:   25:#define MBED_DEBUG_H
        -:   26:#if DEVICE_STDIO_MESSAGES
        -:   27:#include <stdio.h>
        -:   28:#include <stdarg.h>
        -:   29:#endif
        -:   30:
        -:   31:#ifdef __cplusplus
        -:   32:extern "C" {
        -:   33:#endif
        -:   34:
        -:   35:
        -:   36:/** Output a debug message
        -:   37: *
        -:   38: * @param format printf-style format string, followed by variables
        -:   39: */
    #####:   40:static inline void debug(const char *format, ...) {
        -:   41:#if DEVICE_STDIO_MESSAGES && !defined(NDEBUG)
        -:   42:    va_list args;
        -:   43:    va_start(args, format);
        -:   44:    vfprintf(stderr, format, args);
        -:   45:    va_end(args);
        -:   46:#endif
    #####:   47:}
        -:   48:
        -:   49:
        -:   50:/** Conditionally output a debug message
        -:   51: *
        -:   52: * NOTE: If the condition is constant false (== 0) and the compiler optimization
        -:   53: * level is greater than 0, then the whole function will be compiled away.
        -:   54: *
        -:   55: * @param condition output only if condition is true (!= 0)
        -:   56: * @param format printf-style format string, followed by variables
        -:   57: */
        -:   58:static inline void debug_if(int condition, const char *format, ...) {
        -:   59:#if DEVICE_STDIO_MESSAGES && !defined(NDEBUG)
        -:   60:    if (condition) {
        -:   61:        va_list args;
        -:   62:        va_start(args, format);
        -:   63:        vfprintf(stderr, format, args);
        -:   64:        va_end(args);
        -:   65:    }
        -:   66:#endif
        -:   67:}
        -:   68:
        -:   69:
        -:   70:#ifdef __cplusplus
        -:   71:}
        -:   72:#endif
        -:   73:
        -:   74:#endif
        -:   75:
        -:   76:/**@}*/
        -:   77:
        -:   78:/**@}*/
        -:   79:

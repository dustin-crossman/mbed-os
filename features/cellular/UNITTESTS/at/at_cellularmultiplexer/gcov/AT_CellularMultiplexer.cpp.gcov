        -:    0:Source:../../../framework/AT/AT_CellularMultiplexer.cpp
        -:    0:Graph:objs/AT_CellularMultiplexer_unit/AT_CellularMultiplexer.gcno
        -:    0:Data:objs/AT_CellularMultiplexer_unit/AT_CellularMultiplexer.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:/*
        -:    2: * Copyright (c) 2017, Arm Limited and affiliates.
        -:    3: * SPDX-License-Identifier: Apache-2.0
        -:    4: *
        -:    5: * Licensed under the Apache License, Version 2.0 (the "License");
        -:    6: * you may not use this file except in compliance with the License.
        -:    7: * You may obtain a copy of the License at
        -:    8: *
        -:    9: *     http://www.apache.org/licenses/LICENSE-2.0
        -:   10: *
        -:   11: * Unless required by applicable law or agreed to in writing, software
        -:   12: * distributed under the License is distributed on an "AS IS" BASIS,
        -:   13: * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        -:   14: * See the License for the specific language governing permissions and
        -:   15: * limitations under the License.
        -:   16: */
        -:   17:
        -:   18:#include "AT_CellularMultiplexer.h"
        -:   19:#include "CellularLog.h"
        -:   20:
        -:   21:using namespace mbed;
        -:   22:
        2:   23:AT_CellularMultiplexer::AT_CellularMultiplexer(ATHandler &at) : AT_CellularBase(at)
        -:   24:{
        2:   25:}
        -:   26:
        3:   27:AT_CellularMultiplexer::~AT_CellularMultiplexer()
        -:   28:{
        3:   29:}
        -:   30:
        1:   31:nsapi_error_t AT_CellularMultiplexer::multiplexer_mode_start()
        -:   32:{
        -:   33:    log_info("multiplexer_mode_start()");
        -:   34:
        1:   35:    _at.lock();
        -:   36:
        1:   37:    _at.cmd_start("AT+CMUX=0");
        1:   38:    _at.cmd_stop();
        1:   39:    _at.resp_start();
        1:   40:    _at.resp_stop();
        -:   41:
        1:   42:    return _at.unlock_return_error();
        -:   43:}

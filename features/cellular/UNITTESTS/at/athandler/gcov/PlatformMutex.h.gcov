        -:    0:Source:../../../../../platform/PlatformMutex.h
        -:    0:Graph:objs/ATHandler_unit/ATHandler.gcno
        -:    0:Data:objs/ATHandler_unit/ATHandler.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:
        -:    2:/** \addtogroup platform */
        -:    3:/** @{*/
        -:    4:/**
        -:    5: * \defgroup platform_PlatformMutex PlatformMutex class
        -:    6: * @{
        -:    7: */
        -:    8:/* mbed Microcontroller Library
        -:    9: * Copyright (c) 2006-2013 ARM Limited
        -:   10: *
        -:   11: * Licensed under the Apache License, Version 2.0 (the "License");
        -:   12: * you may not use this file except in compliance with the License.
        -:   13: * You may obtain a copy of the License at
        -:   14: *
        -:   15: *     http://www.apache.org/licenses/LICENSE-2.0
        -:   16: *
        -:   17: * Unless required by applicable law or agreed to in writing, software
        -:   18: * distributed under the License is distributed on an "AS IS" BASIS,
        -:   19: * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        -:   20: * See the License for the specific language governing permissions and
        -:   21: * limitations under the License.
        -:   22: */
        -:   23:#ifndef PLATFORM_MUTEX_H
        -:   24:#define PLATFORM_MUTEX_H
        -:   25:
        -:   26:#include "platform/NonCopyable.h"
        -:   27:
        -:   28:#ifdef MBED_CONF_RTOS_PRESENT
        -:   29:#include "rtos/Mutex.h"
        -:   30:typedef rtos::Mutex PlatformMutex;
        -:   31:#else
        -:   32:/** A stub mutex for when an RTOS is not present
        -:   33:*/
        -:   34:class PlatformMutex : private mbed::NonCopyable<PlatformMutex> {
        -:   35:public:
       38:   36:    PlatformMutex() {
        -:   37:        // Stub
        -:   38:
       38:   39:    }
       38:   40:    ~PlatformMutex() {
        -:   41:        // Stub
       38:   42:    }
        -:   43:
        6:   44:    void lock() {
        -:   45:        // Do nothing
        6:   46:    }
        -:   47:
        7:   48:    void unlock() {
        -:   49:        // Do nothing
        7:   50:    }
        -:   51:};
        -:   52:
        -:   53:#endif
        -:   54:
        -:   55:#endif
        -:   56:
        -:   57:/**@}*/
        -:   58:
        -:   59:/**@}*/

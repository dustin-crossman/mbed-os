stages:
  - func_test
  - test
before_script:
    - python -m pip install -r ./targets/TARGET_Cypress/TARGET_PSOC6/sb-tools/requirements.txt
    
# Compile TARGET_PSOC6_PSA
test_mbed_064_psa:
  stage: test
  tags:
    - MBED_TEST
  script:
    - mbedls -m 1907:CY8CPROTO_064_SB 
    - mbed test --compile -m CY8CPROTO_064_SB_M0_PSA -t GCC_ARM -n *psa* -vv
    - mbed test --compile -m CY8CPROTO_064_SB_PSA -t GCC_ARM -n *psa* -vv
    - mbed test --run -m CY8CPROTO_064_SB_PSA -t GCC_ARM -n *psa* -vv

cache:
  paths:
    - .cache/pip
    - venv/
    - pyocd

# Run pyocd wrapper functional tests
pyocd_wrapper:
  stage: func_test
  tags:
    - MBED_TEST
  script:
    - python -V
    - virtualenv venv
    - .\venv\Scripts\activate.ps1
    - echo "[INFO] Getting latest pyocd"
    - if (Test-Path pyocd) { cd pyocd; git pull; cd .. } else { git clone http://git-ore.aus.cypress.com/repo/pyocd.git pyocd }
    - echo "[INFO] Installing recquired python modules"
    - pip install cmsis-pack-manager
    - pip install colorama
    - pip install intelhex
    - pip install intervaltree
    - pip install prettytable
    - pip install pyelftools
    - pip install pyusb
    - pip install pywinusb
    - pip install pyyaml
    - pip install six
    - pip install setuptools_scm_git_archive
    - pip install setuptools_scm
    - echo "[INFO] Installing pyocd"
    - cd pyocd
    - python setup.py install
    - cd ..
    - echo "[INFO] Start tests"
    - cd targets\TARGET_Cypress\TARGET_PSOC6\sb-tools\test
    - python -m unittest -v test_pyocd_wrapper.py

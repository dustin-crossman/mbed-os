# This file was automagically generated by mbed.org.
# If you would like to add your own targets, create a
# project.cmake file locally in your project directory.

CMAKE_MINIMUM_REQUIRED(VERSION 3.9)
SET(CMAKE_SYSTEM_NAME Generic)
#SET(CMAKE_SYSTEM_PROCESSOR arm)
SET(CMAKE_CROSSCOMPILING TRUE)

# force compiler settings
SET(CMAKE_C_COMPILER_WORKS TRUE)
SET(CMAKE_CXX_COMPILER_WORKS TRUE)

SET(CMAKE_ASM_COMPILER_INIT   "{{asm}}")
SET(CMAKE_C_COMPILER_INIT     "{{cc}}")
SET(CMAKE_CXX_COMPILER_INIT   "{{cxx}}")
SET(CMAKE_CXX_LINK_EXECUTABLE "{{ld}}")

{% if pp -%}
SET(PREPROC "{{pp}}")
{%- endif %}
{% if hex_files %}
SET(SREC_CAT "srec_cat")
{%- endif %}

# here starts the project
PROJECT({{name}} C CXX ASM)
#SET(CMAKE_VERBOSE_MAKEFILE ON)

SET(CMAKE_C_FLAGS "{{cc_flags}} -include mbed_config.h")
SET(CMAKE_CXX_FLAGS "{{cxx_flags}}  -include mbed_config.h")
SET(CMAKE_ASM_FLAGS "{{asm_flags}}  -include mbed_config.h")
SET(CMAKE_LINKER_FLAGS "{{ld_flags}}")

SET(LD_SYS_LIBS "{{ld_sys_libs|join(" ")}}")
SET(ELF2BIN {{elf2bin}})

SET(CMAKE_EXE_LINKER_FLAGS "{{ld_flags}} {{link_script_option}} ${LD_SYS_LIBS}")

ADD_DEFINITIONS(
  {% for d in symbols %}-D{{d}}
  {% endfor %})
INCLUDE_DIRECTORIES(
  {% for p in include_paths %}{{p}}
  {% endfor %})

{% for libname,libsrcs in libs.items() %}
# target for library "{{libname}}"
ADD_LIBRARY({{libname}} STATIC EXCLUDE_FROM_ALL
  {% for libsrc in libsrcs %}{{libsrc}}
  {% endfor %})
{% endfor %}

# executable {{name}}
ADD_EXECUTABLE({{name}} EXCLUDE_FROM_ALL
  {% for src in sources %}{{src}}
  {% endfor %})
TARGET_LINK_LIBRARIES({{name}}
  {% for libname in libs %}{{libname}}
  {% endfor %})

##########################################################################
# mbed-cli specific targets
##########################################################################

# detect the build type and select the corresponding cli profile
SET(MBED_BUILD_PROFILE "")
STRING(TOLOWER ${CMAKE_BUILD_TYPE} LOWERCASE_CMAKE_BUILD_TYPE)
IF(LOWERCASE_CMAKE_BUILD_TYPE MATCHES debug)
    SET(MBED_BUILD_PROFILE "mbed-os/tools/profiles/debug.json")
ELSEIF(LOWERCASE_CMAKE_BUILD_TYPE MATCHES relwithdebinfo)
    SET(MBED_BUILD_PROFILE "mbed-os/tools/profiles/develop.json")
ELSEIF(LOWERCASE_CMAKE_BUILD_TYPE MATCHES release)
    SET(MBED_BUILD_PROFILE "mbed-os/tools/profiles/release.json")
ELSEIF(LOWERCASE_CMAKE_BUILD_TYPE MATCHES minsizerel)
    SET(MBED_BUILD_PROFILE "mbed-os/tools/profiles/release.json")
ELSE()
  MESSAGE(WARNING "Build type '${CMAKE_BUILD_TYPE}' is unknown, using debug profile")
  SET(MBED_BUILD_PROFILE "mbed-os/tools/profiles/debug.json")
ENDIF()

# optional custom target to build via mbed-cli
MESSAGE(STATUS "Creating target 01-{{name}} for mbed compilation...")
ADD_CUSTOM_TARGET(01-{{name}} ALL
        COMMAND ${CMAKE_COMMAND} -E echo "mbed compile --build BUILD/${CMAKE_BUILD_TYPE} ${MBED_BUILD_PROFILE}"
        COMMAND mbed compile --build BUILD/${CMAKE_BUILD_TYPE} --profile ${MBED_BUILD_PROFILE}
        WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
        SOURCES ${SOURCE_FILES} ${SYS_SOURCE_FILES})

IF(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/project.cmake)
  INCLUDE(${CMAKE_CURRENT_SOURCE_DIR}/project.cmake)
ELSE()
  MESSAGE(STATUS "Add a local project.cmake file to add your own targets.")
ENDIF()